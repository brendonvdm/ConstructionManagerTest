// <auto-generated />
using System;
using Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Projects.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "New corporate headquarters",
                            Name = "Office Building Construction"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "50-unit apartment building",
                            Name = "Residential Complex"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Highway expansion project",
                            Name = "Road Infrastructure"
                        });
                });

            modelBuilder.Entity("Domain.Projects.ProjectTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("NotStarted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTasks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Clear and grade the site",
                            ProjectId = 1L,
                            Status = "NotStarted",
                            Title = "Site Preparation"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Pour concrete foundation",
                            ProjectId = 1L,
                            Status = "NotStarted",
                            Title = "Foundation Work"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Erect steel structure",
                            ProjectId = 1L,
                            Status = "NotStarted",
                            Title = "Structural Framing"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "Dig foundations",
                            ProjectId = 2L,
                            Status = "NotStarted",
                            Title = "Excavation"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Install plumbing and electrical",
                            ProjectId = 2L,
                            Status = "NotStarted",
                            Title = "Utilities Installation"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "Drywall and flooring",
                            ProjectId = 2L,
                            Status = "NotStarted",
                            Title = "Interior Finishes"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "Mark road alignment",
                            ProjectId = 3L,
                            Status = "NotStarted",
                            Title = "Surveying"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "Prepare roadbed",
                            ProjectId = 3L,
                            Status = "NotStarted",
                            Title = "Grading"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "Lay asphalt surface",
                            ProjectId = 3L,
                            Status = "NotStarted",
                            Title = "Paving"
                        });
                });

            modelBuilder.Entity("Domain.Projects.ProjectTask", b =>
                {
                    b.HasOne("Domain.Projects.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Domain.Projects.Project", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
